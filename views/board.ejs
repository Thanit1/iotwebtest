<%- include('head')%>

  <body>
    <!-- header -->
    <%- include('navbar2.ejs') %>
      <!-- header -->
      <br><br><br><br>
      <div class="container">
        <div class="text-center">
          <h1 id="boardname">user</h1>
        </div>
        <div class="row">
          <div class="text-center my-2">
            <h6 id="tokenname"></h6>
            <button class="btn btn-primary" onclick="copyText()">คัดลอก</button>
            <!-- เพิ่มปุ่มลบ -->
            <button onclick="deleteData()" class="btn btn-danger">ลบฟาร์ม</button>
            <!-- Modal -->
            <div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel"
              aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">
                      ยืนยันการลบข้อมูล
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">คุณต้องการลบข้อมูลหรือไม่?</div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                      ยกเลิก
                    </button>
                    <!-- เมื่อคลิกที่ปุ่มยืนยัน จะเรียกฟังก์ชัน confirmDelete() -->
                    <button type="button" class="btn btn-primary" onclick="confirmDelete()">
                      ยืนยัน
                    </button>
                  </div>
                </div>
              </div>
            </div>
            <!-- เพิ่มฟอร์มสำหรับลบข้อมูล -->
            <form id="deleteForm" action="/deleteData" method="POST">
              <!-- เพิ่ม input hidden เพื่อเก็บ token ที่ต้องการลบ -->
              <input type="hidden" id="tokenInput" name="token" value="" />
            </form>
          </div>
          <div class="col-9">

            <!-- <center> -->
            <div class="my-3 text-center">
              <!-- <h1 class="">Current Sensor Data:</h1> -->
              <h1>สถานะเซนเซอร์</h1>
            </div>

            <div class="container text-center">
              <div class="row">
                <div class="col mx-5 shadow p-3 mb-5 bg-body-secondary rounded">
                  <h2>อุณหภูมิ</h2>
                  <h4 id="temperatureDisplay">No data available</h4>
                </div>
                <div class="col mx-5 shadow p-3 mb-5 bg-body-secondary rounded">
                  <h2>ความชื้นในอากาศ</h2>
                  <h4 id="humidityDisplay">No data available</h4>
                </div>
              </div>

              <div class="row">
                <div class="col mx-5 shadow p-3 mb-5 bg-body-secondary rounded">
                  <h2>ความชื้นในดิน</h2>
                  <h4 id="soilMoisture">No data available</h4>
                </div>
                <div class="col mx-5 shadow p-3 mb-5 bg-body-secondary rounded">
                  <h2>pH Value</h2>
                  <h4 id="pHValue">No data available</h4>
                </div>
              </div>
            </div>
          </div>
          <!-- ฟอร์มสำหรับรดน้ำต้นไม้ -->
          <div class="col-3 my-2 text-center">
            <div class="my-2">
              <form id="wateringForm" action="/waterpum" method="post">
                <!-- ใส่ input field เพื่อให้ผู้ใช้เลือกจำนวณวินาที -->
                <label for="duration">จำนวณวินาทีที่ต้องการรด:</label>
                <input type="number" id="duration" name="time" min="1" max="60" step="1" value="5" />
                <!-- min="1" คือ จำนวณวินาทีต่ำสุดที่สามารถใส่ได้ -->
                <!-- max="60" คือ จำนวณวินาทีสูงสุดที่สามารถใส่ได้ -->
                <!-- step="1" คือ จำนวณวินาทีที่จะเพิ่มหรือลดได้ในแต่ละครั้ง -->
                <!-- value="5" คือ ค่าเริ่มต้นของจำนวณวินาที -->
                <!-- เพิ่ม input hidden เพื่อส่งโทเคน -->
                <input type="hidden" id="tokenInput" name="token" value="<%= nemeValue %>">
                <!-- เพิ่ม input hidden เพื่อส่งค่า status -->
                <input type="hidden" id="statusInput" name="status" value="1">

                <!-- ปุ่ม "รดน้ำต้นไม้" -->
                <button type="button" onclick="startWatering()" class="btn btn-success">รดน้ำต้นไม้</button>
              </form>

              <!-- Modal สำหรับการรดน้ำต้นไม้ -->
              <div class="modal fade" id="wateringModal" tabindex="-1" aria-labelledby="exampleModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="exampleModalLabel">กำลังรดน้ำ</h5>
                      <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      กำลังรดน้ำต้นไม้...
                      <h5 id="countdownDisplay"></h5> <!-- เพิ่มตรงนี้ -->
                    </div>
                  </div>
                </div>
              </div>


              <h1>Select a Vegetable</h1>
              <form action="/confirm_data" method="post">
                <select id="vegetableSelect" name="vegetable">
                  <% vegetables.forEach(function(vegetable) { %>
                    <option value="<%= vegetable %>">
                      <%= vegetable %>
                    </option>
                    <% }); %>
                </select>
                <!-- Assuming you want the token input here -->
                <input type="hidden" id="tokenInput" name="token" value="<%= nemeValue %>">
                <!-- Corrected the type from "token" to "hidden" and added "name" attribute -->
                <button type="submit">Confirm</button>
              </form>
            </div>
          </div>
        </div>
        <!-- </center> -->
      </div>
      <div class="container text-center mt-5">
        <div>
          <h1>คำแนะนำจากการคำนวณ</h1>
          <hr />
          <h4 style="color: brown">ค่า pH สูงเกินไปแนะนำควรปรับสภาพดิน</h4>
          <h4 style="color: brown">ค่า ความชื้นในดินต่ำเกินไป</h4>
        </div>
      </div>

      <script>
        document.addEventListener("DOMContentLoaded", () => {
          const urlParams = new URLSearchParams(window.location.search);
          const nemeValue = urlParams.get("neme");
          const tokenname = document.getElementById("tokenname");
          tokenname.textContent = `Token:${nemeValue} `;
          const temperatureDisplay =
            document.getElementById("temperatureDisplay");
          const humidityDisplay = document.getElementById("humidityDisplay");
          const pHValue = document.getElementById("pHValue");
          const soilMoisture = document.getElementById("soilMoisture");
          const boardname = document.getElementById("boardname");
          const eventSource = new EventSource(
            `/DatasensorStream?neme=${nemeValue}`
          );

          eventSource.onmessage = function (event) {
            const sensorData = JSON.parse(event.data);
            if (sensorData) {
              temperatureDisplay.textContent = `Temperature: ${sensorData.temperature} °C`;
              humidityDisplay.textContent = `Humidity: ${sensorData.humidity} %`;
              pHValue.textContent = `pHValue: ${sensorData.pHValue} pH`;
              soilMoisture.textContent = `Soil Moisture: ${sensorData.soilMoisture}%`;
              boardname.textContent = `${sensorData.boardname}`;
            } else {
              temperatureDisplay.textContent = "No data available";
              humidityDisplay.textContent = "No data available";
              pHValue.textContent = "No data available";
              soilMoisture.textContent = "No data available";
            }
          };
        });

        function copyText() {
          var originalText = document.getElementById("tokenname").innerText;
          var textToCopy = originalText.split(":")[1].trim();
          var tempInput = document.createElement("input");
          tempInput.value = textToCopy;
          document.body.appendChild(tempInput);
          tempInput.select();
          tempInput.setSelectionRange(0, 99999);
          document.execCommand("copy");
          document.body.removeChild(tempInput);

          alert("คัดลอกข้อความแล้ว: " + textToCopy);
        }

        function deleteData() {
          // เรียก Modal สำหรับยืนยันการลบข้อมูล
          var myModal = new bootstrap.Modal(
            document.getElementById("confirmationModal")
          );
          myModal.show();
        }

        function confirmDelete() {
          const urlParams = new URLSearchParams(window.location.search);
          const tokenValue = urlParams.get("neme"); // หรือเปลี่ยนเป็น 'token' ตามที่เหมาะสม
          // ตั้งค่าค่า token ลงใน input hidden
          document.getElementById("tokenInput").value = tokenValue;
          // submit ฟอร์มที่ใช้สำหรับลบข้อมูล
          document.getElementById("deleteForm").submit();
        }
        function startWatering() {
          // เรียก Modal สำหรับแสดง modor การรดน้ำ
          var wateringModal = new bootstrap.Modal(document.getElementById('wateringModal'));
          wateringModal.show();

          var durationSeconds = parseInt(document.getElementById('duration').value);
          var countdownDisplay = document.getElementById('countdownDisplay');

          // นับถอยหลัง
          var countdownInterval = setInterval(function () {
            durationSeconds--;
            countdownDisplay.textContent = `เหลือเวลา ${durationSeconds} วินาที`;

            if (durationSeconds <= 0) {
              clearInterval(countdownInterval); // หยุดการนับถอยหลังเมื่อครบเวลา
              wateringModal.hide(); // ซ่อน Modal
              document.getElementById('wateringForm').reset(); // รีเซ็ตฟอร์ม

              // ทำการส่ง request ไปยังเซิร์ฟเวอร์เพื่ออัปเดตข้อมูลในฐานข้อมูล
              updateDatabase(0, 0); // เรียกฟังก์ชัน updateDatabase() โดยส่งค่า status = 0 และเวลา = 0
            }
          }, 1000); // ทุกๆ 1 วินาที

          // เมื่อการรดน้ำเสร็จสิ้น ซ่อน Modal และรีเซ็ตฟอร์ม
          setTimeout(function () {
            clearInterval(countdownInterval); // หยุดการนับถอยหลังเมื่อครบเวลา
            wateringModal.hide(); // ซ่อน Modal
            document.getElementById('wateringForm').reset(); // รีเซ็ตฟอร์ม

            // ทำการส่ง request ไปยังเซิร์ฟเวอร์เพื่ออัปเดตข้อมูลในฐานข้อมูล
            updateDatabase(0, 0); // เรียกฟังก์ชัน updateDatabase() โดยส่งค่า status = 0 และเวลา = 0
          }, durationSeconds * 1000); // รอจนกว่าจะหมดเวลาตามที่ผู้ใช้กำหนด

          // อัปเดตค่า status เป็น 1 และ time เป็นเวลาที่เลือก
          updateDatabase(1, durationSeconds);
        }


        // ฟังก์ชันสำหรับอัปเดตข้อมูลในฐานข้อมูล
        function updateDatabase(status, time) {
          const urlParams = new URLSearchParams(window.location.search);
          const tokenValue = urlParams.get('neme'); // หรือเปลี่ยนเป็น 'token' ตามที่เหมาะสม

          // ส่ง request ไปยังเซิร์ฟเวอร์เพื่ออัปเดตข้อมูล
          $.ajax({
            type: "POST",
            url: "/waterpum",
            data: {
              token: tokenValue,
              status: status,
              time: time
            },
            success: function (response) {
              console.log("Database updated successfully");
            },
            error: function (xhr, status, error) {
              console.error("Error updating database:", error);
            }
          });
        }
      </script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js"></script>
      <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

      <script src="./app2.js"></script>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
  </body>

  </html>